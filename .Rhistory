project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
widen()
devtools::load_all()
library(tidyverse)
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
widen()
devtools::load_all()
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
widen()
devtools::load_all()
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
widen()
devtools::load_all()
write.csv(projectwide.df, file = "Wide_project.csv")
write.csv(project.df, file = "project_long.csv")
read_csv2("project_long.csv")
project0<- read_csv2("project_long.csv")
project0<- read_csv("project_long.csv")
View(project0)
devtools::load_all()
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
widen(projectpath = "project_long.csv")
widen(projectfile = "project_long.csv")
devtools::load_all()
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
widen(projectfile = "project_long.csv")
devtools::load_all()
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
widen(projectpath = "project_long.csv")
devtools::load_all()
devtools::load_all()
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
widen(projectpath = "project_long.csv")
devtools::load_all()
widen(projectpath = "project_long.csv")
devtools::load_all()
widen(projectpath = "project_long.csv")
project2.df <- read_csv("project_long.csv")
library(tidyverse)
project2.df <- read_csv("project_long.csv")
projectwide.df <- project2.df %>%
dplyr::select(-Detection_limit, -1) %>%
tidyr::pivot_wider(names_from = Element, values_from = Concentration)
projectwide.df <- as.data.frame(projectwide.df)
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
widen(projectpath = "project_long.csv")
devtools::load_all()
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
widen(projectpath = "project_long.csv")
devtools::load_all()
projectfile1.df <- importxrf(datapath = "2ANS&2AEN_merged.txt", infopath = "Infofile_forR.xlsx")
View(projectfile1.df)
View(projectfile1.df)
project1.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
View(project1.df)
View(projectfile1.df)
pivotproject.df <- projectfile1.df %>%
tidyr::pivot_longer(C : As,
names_to = "Element",
values_to = "Count")
mean.blanks.df <- pivotproject.df %>%
dplyr::filter(.data$Filter_blank == "blank") %>%
dplyr::group_by(Filter_type, Filter_size, Filter_box_nr, Element)
mean.blanks.df <- pivotproject.df %>%
dplyr::filter(.data$Filter_blank == "blank") %>%
dplyr::group_by(Filter_type, Filter_size, Filter_box_nr, Element) %>%
dplyr::summarise(mean_blank = mean(.data$Count))
mean.blanks.df <- pivotproject.df %>%
dplyr::filter(Filter_blank == "blank") %>%
dplyr::group_by(Filter_type, Filter_size, Filter_box_nr, Element) %>%
dplyr::summarise(mean_blank = mean(Count))
adjusted.for.blanks.df <- dplyr::left_join(pivotproject.df, mean.blanks.df, by = c("Filter_type", "Filter_size", "Filter_box_nr", "Element")) %>%
dplyr::mutate(Net_count = Count - mean_blank)
setupfile.df <- importsetup(setuppath = setuppath)
setupfile.df <- importsetup(setuppath = "xrf_setup.xlsx")
joined.df <- dplyr::left_join(adjusted.for.blanks.df, setupfile.df, by = c("Filter_type", "Element"))
calculations.df <- joined.df %>%
dplyr::mutate(Concentration = ((Net_count * Cal_const) * filter_area * (1000 / Volume) * 1000 * (Drift_2008 / Drift_2019)) / MolarW)
calculations.df <- joined.df %>%
dplyr::mutate(Concentration = ((Net_count * Cal_const) * 9.078935 * (1000 / Volume) * 1000 * (Drift_2008 / Drift_2019)) / MolarW)
detectionlimits.df <- setupfile.df %>%
dplyr::select(DL_PC : DL_GFF, Element) %>%
tidyr::pivot_longer(DL_PC : DL_GFF,
names_to = "Filter_type",
values_to = "Detection_limit") %>%
dplyr::mutate(Filter_type = stringr::str_remove(Filter_type, "DL_"))
project.detectionlim.df <- dplyr::left_join(calculations.df, detectionlimits.df, by = c("Filter_type", "Element"))
View(project.detectionlim.df)
project.df <- project.detectionlim.df %>%
dplyr::distinct() %>%
dplyr::select(Sample : Element, Concentration, Detection_limit)
View(project.df)
projectfile1.df <- importxrf(datapath = "2ANS&2AEN_merged.txt", infopath = "Infofile_forR.xlsx")
project1.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
projectfile.df <- importxrf(datapath = "2ANS&2AEN_merged.txt", infopath = "Infofile_forR.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
View(project.df)
devtools::load_all()
library(tidyverse)
projectfile.df <- importxrf(datapath = "2ANS&2AEN_merged.txt", infopath = "Infofile_forR.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
projectfile.df <- importxrf(datapath = "2ANS&2AEN_merged.txt", infopath = "Infofile_forR.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
projectfile1.df <- importxrf(datapath = "2ANS&2AEN_merged.txt", infopath = "Infofile_forR.xlsx")
devtools::load_all()
projectfile1.df <- importxrf(datapath = "2ANS&2AEN_merged.txt", infopath = "Infofile_forR.xlsx")
project1.df <- convertxrf(projectpath = "projectfile1.df", setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
devtools::load_all()
projectfile.df <- importxrf(datapath = "2ANS&2AEN_merged.txt", infopath = "Infofile_forR.xlsx")
project1.df <- convertxrf(projectpath = "projectfile.df", setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
project1.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
View(project1.df)
Sample <- c("COM001", "COM001", "COM001", "COM001", "COM001")
Element <- c("C", "N", "O", "Na", "Mg")
Concentration <- c(-4.19727307987776, 0.292013243234358, 0.328051062623146, -0.0555794187038898, 0.0353942596959773)
Detection_limit <- c(1.22193802149026, 0.312338639119395, 0.0322146560280234, 0.0362539069926691, 0.00465264605182871)
firstrows.df <- data.frame(Sample, Element, Concentration, Detection_limit)
View(firstrows.df)
View(firstrows.df)
devtools::load_all()
widennn()
projectfile.df <- importxrf(datapath = "2ANS&2AEN_merged.txt", infopath = "Infofile_forR.xlsx")
project1.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
write.csv(project1.df, file = "AEN_aug2019_long.csv")
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
devtools::load_all()
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
widen(projectpath = "project_long.csv")
wide.df <- widen(projectpath = "projectlong.csv")
wide.df <- widen(projectpath = "project_long.csv")
View(wide.df)
View(wide.df)
devtools::load_all()
wide.df <- widen(projectpath = "project_long.csv")
View(wide.df)
devtools::load_all()
wide.df <- widen(projectpath = "project_long.csv")
View(wide.df)
devtools::load_all()
wide.df <- widen(projectpath = "project_long.csv")
devtools::load_all()
wide.df <- widen(projectpath = "project_long.csv")
devtools::load_all()
wide.df <- widen(projectpath = "project_long.csv")
devtools::load_all()
wide.df <- widen(projectpath = "project_long.csv")
devtools::load_all()
wide.df <- widen(projectpath = "project_long.csv")
devtools::load_all()
wide.df <- widen(projectpath = "project_long.csv")
devtools::load_all()
wide.df <- widen(projectpath = "project_long.csv")
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
wide.df <- widen(projectpath = "project_long.csv")
devtools::load_all()
wide.df <- widen(projectpath = "project_long.csv")
View(wide.df)
devtools::load_all()
wideabove.df <- widen_above(projectpath = "project_long.csv")
View(wideabove.df)
devtools::load_all()
wideabove.df <- widen_above(projectpath = "project_long.csv")
View(wideabove.df)
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Station", second_factor = "Depth", first_element = "C", last_element = "As")
View(wideabove.df)
View(wide.df)
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
devtools::load_all()
wideabove.df <- widen_above(projectpath = "project_long.csv")
View(wideabove.df)
devtools::load_all()
wide.df <- widen(projectpath = "project_long.csv")
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
View(widemeans.df)
devtools::load_all()
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
View(widemeans.df)
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
widemeans.df <- widen_means(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
View(widemeans.df)
devtools::load_all()
widemeansabove.df <- widen_means_above(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
devtools::load_all()
widemeansabove.df <- widen_means_above(projectpath = "project_long.csv", first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
View(wide.df)
View(widemeans.df)
View(wide.df)
library(tidyverse)
library(devtools)
library(roxygen2)
usethis::use_testthat()
View(project.df)
View(projectfile.df)
View(projectfile.df)
library(ggplot2)
devtools::load_all()
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
project.df <- convertxrf(projectpath = projectfile.df, setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
project.df <- convertxrf(projectpath = "projectfile.df", setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
project.df <- convertxrf(projectpath = projectfile.df, setuppath = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
View(project.df)
devtools::load_all()
projectfile.df <- importxrf(datapath = "xrf_rawdata.txt", infopath = "xrf_projectinfo.xlsx")
projectfile.df <- importxrf(raw.data = "xrf_rawdata.txt", project.info = "xrf_projectinfo.xlsx")
project.df <- convertxrf(imported.data = projectfile.df, setup = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
wide.df <- widen(project.data = project.df)
View(wide.df)
devtools::load_all()
wide.df <- widen(project.data = project.df)
View(wide.df)
devtools::load_all()
wide.df <- widen(project.data = project.df)
wideabove.df <- widen_above(projectpath = "project_long.csv")
wideabove.df <- widen_above(project.data = "project_long.csv")
wideabove.df <- widen_above(project.data = project.df)
View(wideabove.df)
widemeans.df <- widen_means(project.data = project.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
View(widemeans.df)
devtools::load_all()
widemeansabove.df <- widen_means_above(project.data = project.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
View(project.df)
devtools::load_all()
projectfile.df <- importxrf(raw.data = "xrf_rawdata.txt", project.info = "xrf_projectinfo.xlsx")
project.df <- convertxrf(imported.data = projectfile.df, setup = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
wide.df <- widen(project.data = project.df)
wideabove.df <- widen_above(project.data = project.df)
widemeans.df <- widen_means(project.data = project.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
widemeansabove.df <- widen_means_above(widened.above = wideabove.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
View(widemeans.df)
View(wideabove.df)
View(wideabove.df)
View(project.df)
View(wideabove.df)
wideabove.df <- widen_above(project.data = project.df)
View(wideabove.df)
devtools::load_all()
projectfile.df <- importxrf(raw.data = "xrf_rawdata.txt", project.info = "xrf_projectinfo.xlsx")
project.df <- convertxrf(imported.data = projectfile.df, setup = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
wide.df <- widen(project.data = project.df)
wideabove.df <- widen_above(project.data = project.df)
widemeans.df <- widen_means(project.data = project.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
widemeansabove.df <- widen_means_above(widened.above = wideabove.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
widemeansabove.df <- widen_means_above(project.data = project.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
widemeansabove.df <- widen_means_above(project.data = project.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "Mg")
View(widemeansabove.df)
View(widemeans.df)
widemeansabove.df <- widen_means_above(project.data = project.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "Cu")
widemeansabove.df <- widen_means_above(project.data = project.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
View(wide.df)
devtools::load_all()
devtools::load_all()
widemeansabove.df <- widen_means_above(project.data = project.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
View(wideabove.df)
View(widemeans.df)
View(wideabove.df)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
(c(Sample, Date, dplyr::contains("Int")))
dat <- iris[1:5, c("Species", "Sepal.Length")]
dat
a2 <- data.frame(Sample = c("A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8", "A9", "A10"),
Date = c("01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020"),
C = c(54.987523, 56.429872, 53.249362, 51.423873, 53.234872, 59.324871, 51238712, 59.230918, 48.239811, 54.098127),
N = c(0.287509, 0.698235, 0.398389, 0.736982, 0.348098, 0.398092, 0.607234, 0.459872, 0.409709, 0.398092),
O = c(3.348709, 2.487923, 2.589723, 3.134987, 2.598702, 2.450982, 3.287924, 1.908322, 2.234987, 2.123098),
Na = c(0.345987, 0.909342, 1.435098, 1.435873, 1.230395, 0.982345, 1.245985, 0.120985, 1.008234, 1.029341),
Mg = c(1.245098, 3.245809, 2.240598, 1.245982, 3.234982, 1.234872, 2.234098, 3.234872, 1.872345, 1.098324))
a2
b2 <- data.frame(Sample = c("A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8", "A9", "A10"),
Filter_type = c("PC", "PC", "PC", "PC", "PC", "PC", "PC", "PC", "PC", "PC"),
Filter_size = c(0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8),
Filter_box_nr = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
Filter_blank = c(NA, NA, NA, NA, NA, NA, NA, NA, "blank", "blank"),
Volume = c(1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000),
Location = c("L1", "L1", "L1", "L1", "L2", "L2", "L2", "L2", NA, NA),
Depth = c("10m", "50m", "100m", "200m", "10m", "50m", "100m", "200m", NA, NA))
b2
importsetup(setup = "xrf_setup.xlsx")
n <- importsetup(setup = "xrf_setup.xlsx")
View(n)
View(n)
devtools::test()
devtools::test()
source('C:/Users/Anna/Dropbox/XRF_AeN/package/xrfr/R/imports.R', echo=TRUE)
devtools::test()
devtools::test()
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
data.frame(Sample = c("A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8", "A9", "A10"),
Date = c("01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020", "01.01.2020"),
C = c(54.987523, 56.429872, 53.249362, 51.423873, 53.234872, 59.324871, 51238712, 59.230918, 48.239811, 54.098127),
N = c(0.287509, 0.698235, 0.398389, 0.736982, 0.348098, 0.398092, 0.607234, 0.459872, 0.409709, 0.398092),
O = c(3.348709, 2.487923, 2.589723, 3.134987, 2.598702, 2.450982, 3.287924, 1.908322, 2.234987, 2.123098),
Na = c(0.345987, 0.909342, 1.435098, 1.435873, 1.230395, 0.982345, 1.245985, 0.120985, 1.008234, 1.029341),
Mg = c(1.245098, 3.245809, 2.240598, 1.245982, 3.234982, 1.234872, 2.234098, 3.234872, 1.872345, 1.098324))
a <- importdata("/tests/testthat/testdata_rawdata.txt")
a <- importdata(raw.data = system.file("testthat", "testdata_rawdata.txt", package = "xrfr"))
a <- importdata(raw.data = system.file("/tests/testthat", "testdata_rawdata.txt", package = "xrfr"))
View(a)
View(a)
b <- importinfo(project.info = system.file("/tests/testthat", "testdata_infofile.xlsx", package = "xrfr"))
View(b)
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
View(a)
devtools::load_all()
devtools::test()
devtools::test()
devtools::load_all()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devt
devtools::test()
devtools::test()
devtools::test()
c <- importxrf(raw.data = system.file("/tests/testthat", "testdata_rawdata.txt", package = "xrfr"), project.info = system.file("/tests/testthat", "testdata_infofile.xlsx", package = "xrfr"))
View(c)
devtools::test()
devtools::test()
projectfile.df <- importxrf(raw.data = "xrf_rawdata.txt", project.info = "xrf_projectinfo.xlsx")
project.df <- convertxrf(imported.data = projectfile.df, setup = "xrf_setup.xlsx", year = "2019", first_element = "C", last_element = "As")
wide.df <- widen(project.data = project.df)
wideabove.df <- widen_above(project.data = project.df)
widemeans.df <- widen_means(project.data = project.df, first_factor = "Day", second_factor = "Treatment", first_element = "C", last_element = "As")
View(widemeans.df)
View(wide.df)
write.csv(wide.df, file = "project_wide.csv")
write.csv(wideabove.df, file = "project_wide_abovedetlim.csv")
write.csv(widemeans.df, file = "project_wide_means.csv")
help("expect_identical")
help("filter")
help("dplyr::filter")
help("summarise")
help(package = "ggplot2")
help(package = "purr")
help(package = "dplyr")
View(a)
devtools::test()
View(c)
devtools::test()
devtools::load_all()
rawdata.df <- read_delim("xrf_rawdata.txt", delim = "\t", locale = readr::locale(decimal_mark = ","))
View(rawdata.df)
projectinfo.df <- read_excel("xrf_projectinfo.xlsx")
View(projectinfo.df)
setup.df <- read_excel("xrf_setup.xlsx")
View(setup.df)
projectfile.df <- importxrf(raw.data = rawdata.df, project.info = projectinfo.df)
View(projectfile.df)
project.df <- convertxrf(imported.data = projectfile.df, setup = setup.df, year = "2019", first_element = "C", last_element = "As")
View(project.df)
a <- data.frame(Sample = c("A1", "A2", "A3", "A4"),
Date = "01.01.2020",
C = c(2.38, 3.28, 2.13, 1.75),
N = c(1.12, 0.43, 0.83, 1.29),
O = c(1.29, 2.12, 1.92, 1.63))
a
b <- data.frame(Sample = c("A1", "A2", "A3", "A4"),
Filter_type = "PC",
Filter_size = 0.8,
Filter_box_nr = 1,
Filter_blank = c(NA, NA, NA, "blank"),
Volume = 1000)
b
View(a)
data.frame(Sample = c("A1", "A2", "A3", "A4"),
Date = "01.01.2020",
"C (Int)" = c(2.38, 3.28, 2.13, 1.75),
"N (Int)" = c(1.12, 0.43, 0.83, 1.29),
"O (Int)" = c(1.29, 2.12, 1.92, 1.63))
View(a)
a <- data.frame(Sample = c("A1", "A2", "A3", "A4"),
Date = "01.01.2020",
"C (Int)" = c(2.38, 3.28, 2.13, 1.75),
"N (Int)" = c(1.12, 0.43, 0.83, 1.29),
"O (Int)" = c(1.29, 2.12, 1.92, 1.63))
a
View(a)
ab <- importxrf(raw.data = a, project.info = b)
View(ab)
View(projectinfo.df)
View(rawdata.df)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::load_all()
devtools::test()
devtools::test()
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::load_all()
devtools::test()
devtools::test()
View(project.df)
View(setup.df)
devtools::load_all()
devtools::test()
View(setup.df)
devtools::test()
devtools::test()
View(project.df)
devtools::test()
devtools::test()
devtools::test()
a <- data.frame(Sample = c("A1", "A2", "A3", "A4"),
Date = "01.01.2020",
C.Int = c(2.38, 3.28, 2.13, 1.75),
N.Int = c(1.12, 0.43, 0.83, 1.29),
O.Int = c(1.29, 2.12, 1.92, 1.63),
Filter_type = "PC",
Filter_size = 0.8,
Filter_box_nr = 1,
Filter_blank = c(NA, NA, NA, "blank"),
Volume = 1000)
colnames(a) <- c("Sample", "Date", "C", "N", "O", "Filter_type", "Filter_size", "Filter_box_nr", "Filter_blank", "Volume")
a
b <- data.frame(Element = c("C", "N", "O"),
PC = c(0.006, 0.032, 0.0025),
GFF = c(0.0094, 0.0345, 0.0025),
MolarW = c(12.01, 14.01, 16),
DL_PC = c(1.22, 0.31, 0.32),
DL_GFF = c(0.13, 0.2, 0.15),
Drift_2008 = c(36, 13, 5),
Drift_2019 = c(36, 12, 4))
ab <- convertxrf(imported.data = a, setup = b, year = "2019", first_element = "C", last_element = "O")
ab
View(ab)
devtools::test()
devtools::test()
devtools::test()
install.packages("vctrs")
# THIS CHUNK HAS MUCH THAT DOES NOT WORK YET
library(tidyverse)
library(readxl)
library(xrfr)
devtools::document()
R.Version()
devtools::check()
library(devtools)
use_mit_license()
use_mit_license("Anna Grytaas")
devtools::check()
install.packages("Rtools")
library(devtools)
library(tidyverse)
library(readxl)
Sys.which("make")
RStudio.Version()
library(devtools)
library(tidyverse)
library(readxl)
devtools::check()
library(devtools)
library(tidyverse)
library(readxl)
library(qpdf)
devtools::check()
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.setenv('PATH' = paste0('C:\Program Files\qpdf-version_10.0.4\bin;', Sys.getenv('PATH')))
Sys.setenv('PATH' = paste0('C:\Programfiler\qpdf-version_10.0.4\bin;', Sys.getenv('PATH')))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
